[tool.poetry]
name = "local_smooth"
version = "0.0.1"
description = ""
authors = []
readme = "README.md"
repository = ""
documentation = "TBD"

[tool.black]
target-version = ["py39"]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | thirdparty
)/
'''

[tool.poetry.dependencies]
python = "~3.9"
numpy = "^1.19.4"
matplotlib = "^3.3.3"
tqdm = "^4.5"
sklearn = ">=0"
seaborn = ">=0"
pyyaml = ">=0"
pyyml = "^0.0.2"
pre-commit = "^2.15.0"
isort = "^5.10.1"
black = "^21.12b0"
scipy = "^1.7.3"
"ruamel.yaml" = "^0.17.19"
poetry-core = "1.0.4"
flake8 = "^4.0.1"

[tool.isort]
src_paths = ["local_smooth"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
lines_after_imports = 2
skip_glob = 'thirdparty'

[tool.flake8]
min_python_version = "3.8.0"
max-line-length = 88
# ban-relative-imports = true
# flake8-use-fstring: https://github.com/MichaelKim0407/flake8-use-fstring#--percent-greedy-and---format-greedy
format-greedy = 1
inline-quotes = "double"
# Allow omission of a return type hint for __init__ if at least one argument is annotated
# used by flake8-annotations
mypy-init-return = true
#enable-extensions = TC, TC2
#type-checking-exempt-modules = typing, typing-extensions
eradicate-whitelist-extend = "^-.*;"
extend-ignore = """
    # E203: Whitespace before ':' (pycqa/pycodestyle#373)
    E203,
    # SIM106: Handle error-cases first
    SIM106,
    # ANN101: Missing type annotation for self in method
    ANN101,
    # ANN102: Missing type annotation for cls in classmethod
    ANN102,
    # E402: module level import not at top of file
    E402,
    """
extend-exclude = """
    # Frozen and not subject to change in this repo:
    thirdparty/*,
    soul_gan/utils/metrics/compute_fid_tf.py,
    # # External to the project's coding standards:
    """